# Generated by Django 5.1 on 2024-08-18 10:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone_number', models.CharField(max_length=15, unique=True)),
                ('project', models.CharField(max_length=200)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('DRAFT', 'DRAFT'), ('PUBLIC', 'PUBLIC')], default='PUBLIC', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'ordering': ['full_name'],
                'indexes': [models.Index(fields=['email'], name='api_applica_email_b543a3_idx'), models.Index(fields=['telephone_number'], name='api_applica_telepho_93bd67_idx'), models.Index(fields=['status'], name='api_applica_status_a0249d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ServicesCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(max_length=500)),
                ('status', models.CharField(choices=[('DRAFT', 'DRAFT'), ('PUBLIC', 'PUBLIC')], default='PUBLIC', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='api_service_name_1aa025_idx'), models.Index(fields=['status'], name='api_service_status_a3ab5b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('entry_moto', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.URLField(max_length=500)),
                ('status', models.CharField(choices=[('DRAFT', 'DRAFT'), ('PUBLIC', 'PUBLIC')], default='PUBLIC', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.servicescategory')),
                ('staffs', models.ManyToManyField(to='api.user')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('entry_moto', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.URLField(max_length=500)),
                ('status', models.CharField(choices=[('DRAFT', 'DRAFT'), ('PUBLIC', 'PUBLIC')], default='PUBLIC', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Staffs',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.user')),
                ('status_choices', models.CharField(choices=[('Admin', 'Admin'), ('Teacher', 'Teacher')], default='Teacher', max_length=20)),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staffs',
                'ordering': ['id'],
                'indexes': [models.Index(fields=['status_choices'], name='api_staffs_status__937444_idx')],
            },
            bases=('api.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_status', models.TextField()),
                ('experience', models.TextField()),
                ('description', models.TextField()),
                ('image', models.URLField(max_length=500)),
                ('telephone_number', models.CharField(max_length=15, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'DRAFT'), ('PUBLIC', 'PUBLIC')], default='PUBLIC', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.blog')),
                ('services', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.services')),
                ('staffs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.staffs')),
            ],
            options={
                'ordering': ['our_status'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='api_user_email_a7eefd_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone_number'], name='api_user_phone_n_891aa3_idx'),
        ),
        migrations.AddIndex(
            model_name='services',
            index=models.Index(fields=['name'], name='api_service_name_c4900d_idx'),
        ),
        migrations.AddIndex(
            model_name='services',
            index=models.Index(fields=['status'], name='api_service_status_a057f8_idx'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['name'], name='api_blog_name_259efa_idx'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['status'], name='api_blog_status_c3e5b4_idx'),
        ),
        migrations.AddIndex(
            model_name='about',
            index=models.Index(fields=['telephone_number'], name='api_about_telepho_b3d787_idx'),
        ),
        migrations.AddIndex(
            model_name='about',
            index=models.Index(fields=['status'], name='api_about_status_2fe3cb_idx'),
        ),
    ]
